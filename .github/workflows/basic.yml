name: CI

on:
  # issues:
  #   types: # could also be [opened, edited, closed]
  #     - opened
  push:
    branches: [ main ]
    # branches-ignore:
    #   - 'prod*'
    # tags-ignore:
    #   - 'rc*'
    # paths-ignore:
    #   - '**.txt'
    # paths:
    #   - '**.yaml'
  pull_request:
    branches: [ main ]
  workflow_run:
    workflows: ["verify file"]
    types: [completed] # (completed, requested)
  # call from another workflow
  workflow_call:
    inputs:
      title:
        required: true
        type: string
  # call from user via github wui
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch name'
        required: true
        default: 'main'
      warning_analyzer:
        required: true
        default: true
        type: boolean
permissions:
  contents: write
# defaults:
#   run:
#     shell: bash
#     working-directory: workdir
jobs:
  build:
    runs-on: ubuntu-latest
    # defaults: # this overrides defaults at the level of workflow
    #   run:
    #     shell: bash
    #     working-directory: workdir
    outputs: # it is needed to pass outputs between jobs
      build-stage: ${{ steps.build.outputs.BUILD_STAGE }}
    steps:
      - name: checkout
        run: echo Branch name ${{ github.event.inputs.branch }}
      - name: build
        id: build # it is needed to pass variable between steps
        run: |
          echo "::notice:: This is notice message"
          echo build is running
          echo "BUILD_STAGE=debug" >> $GITHUB_OUTPUT
          touch build-result.txt
          echo 'build results :0' > build-result.txt
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: build-results
          path:
            build-result.txt
          if-no-files-found: ignore # (error, warn, ignore) default vale is warn
          retention-days: 7 # value from 1 to 30, default value is 0 (0 = default value set in settings)
      - name: warning-analyzer
        if: ${{ github.event.inputs.warning_analyzer == 'true' || github.event_name != 'workflow_dispatch' }}
        run: |
          echo checking warnings
          echo "The build stage is ${{ steps.build.outputs.BUILD_STAGE}}"
      - name: post-action
        run: echo uploading artifacts
  post-build:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v5.0.0
        with:
          name: build-results
      - name: Get stage
        run: | 
          cat build-result.txt
          echo "The build stage is ${{ needs.build.outputs.build-stage }}"
  ut:
    runs-on: ubuntu-latest
    steps:
      - name: test 1
        run: | 
          ls -la
          touch test.txt
          echo 'random text' > test.txt
          pwd
          ls -la
      - name: test 2
        run: | 
          ls -la
          touch test2.txt
          pwd
          ls -la
          echo test
      - name: Cache
        uses: actions/cache@v4.2.4
        env:
          cache-name: ut-cache
        with: 
          path: |
            test.txt
            test2.txt
          key: ${{ runner.os }}-ut-${{ env.cache-name }}-${{ hashFiles('**/test.txt') }}
          restore-keys: |
            - ${{ runner.os }}-ut-${{ env.cache-name }}-
            - ${{ runner.os }}-ut-
            - ${{ runner.os }}-
  call_other_workflow:
    # concurrency:
    #   group: ${{ github.ref}}
    #   cancel-in-progress: true
    uses: ./.github/workflows/demo1.yml
    with:
      text: "This is text send from CI workflows"
  use_workflow_with_matrix:
    strategy:
      matrix:
        prod: [prod1, prod2]
        level: [dev, stage, prod]
    uses: ./.github/workflows/demo1.yml
    with:
      text: "Prod: ${{ matrix.prod}}, Level: ${{ matrix.level }}"
    
        
